# Black Scholes call price table depending on spot price (+-30%

import numpy as np
import yfinance as yf 
from spicy.stats import norm

lvmh = yf.Ticker("MC.PA")
data = lvmh.history(period="1d")
last_close = data['Close'].iloc[-1]
min_price = last_close * 0.7
max_price = last_close * 1.3

spot_prices = np.random.uniform(low=min_price, high=max_price, size=100)

strike = last_close
maturity = float(input("Maturity : ")
rf = float(input("Risk-free rate : ")
volatility = float(input("Implied volatility : ")

for i in spot_prices
  d1 = (np.log(i/strike) + (rf + (volatility**2)/2) * maturity)) / (volatility * np.sqrt(maturity))
  d2 = d1 - volatility * np.sqrt(maturity)
  call_price = i * norm.cdf(d1) - strike * norm.cdf(d2) * exp(-rf * maturity)
